[easypay][${env:server.port}] 2021-10-09 17:28:49,153 INFO
            [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[easypay][${env:server.port}] 2021-10-09 17:28:49,169 INFO
            [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[easypay][${env:server.port}] 2021-10-09 17:28:49,175 INFO
            [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos-port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://localhost:8848, dubbo.scan.base-packages=ink.breakpoint.easypay}
[easypay][${env:server.port}] 2021-10-09 17:28:49,533 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbb8b673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:49,611 INFO
            [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[easypay][${env:server.port}] 2021-10-09 17:28:49,845 INFO
            [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos-port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://localhost:8848, dubbo.scan.base-packages=ink.breakpoint.easypay}
[easypay][${env:server.port}] 2021-10-09 17:28:49,984 INFO
            [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[easypay][${env:server.port}] 2021-10-09 17:28:49,996 INFO
            [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'merchant-application.yaml', group: 'EASYPAY_GROUP'
[easypay][${env:server.port}] 2021-10-09 17:28:49,998 INFO
            [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1632789609 {name='merchant-application.yaml', properties={swagger.enable=true, server.servlet.context-path=/merchant}}, NacosPropertySource@659059448 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, http.encoding.enabled=true, server.use?forward-headers=true, http.messages.encoding=UTF?8, server.servlet.context-path=/, http.encoding.charset=UTF?8, server.tomcat.protocol_header=x?forwarded?proto, server.tomcat.remote_ip_header=x?forwarded?for, http.encoding.force=true}}]}
[easypay][${env:server.port}] 2021-10-09 17:28:50,029 INFO
            [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[easypay][${env:server.port}] 2021-10-09 17:28:51,109 WARN
            [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[easypay][${env:server.port}] 2021-10-09 17:28:51,112 WARN
            [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[easypay][${env:server.port}] 2021-10-09 17:28:51,121 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[easypay][${env:server.port}] 2021-10-09 17:28:51,121 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[easypay][${env:server.port}] 2021-10-09 17:28:51,121 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[easypay][${env:server.port}] 2021-10-09 17:28:51,122 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[easypay][${env:server.port}] 2021-10-09 17:28:51,122 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[easypay][${env:server.port}] 2021-10-09 17:28:51,122 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[easypay][${env:server.port}] 2021-10-09 17:28:51,122 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[easypay][${env:server.port}] 2021-10-09 17:28:51,122 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[easypay][${env:server.port}] 2021-10-09 17:28:51,122 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[easypay][${env:server.port}] 2021-10-09 17:28:51,123 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,124 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,124 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[easypay][${env:server.port}] 2021-10-09 17:28:51,124 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,124 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,125 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,125 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,125 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[easypay][${env:server.port}] 2021-10-09 17:28:51,125 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[easypay][${env:server.port}] 2021-10-09 17:28:51,126 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,126 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[easypay][${env:server.port}] 2021-10-09 17:28:51,126 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[easypay][${env:server.port}] 2021-10-09 17:28:51,127 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[easypay][${env:server.port}] 2021-10-09 17:28:51,324 WARN
            [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[easypay][${env:server.port}] 2021-10-09 17:28:51,381 INFO
            [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:51,381 INFO
            [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:51,438 WARN
            [main][ServiceAnnotationBeanPostProcessor.java:169] -  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[ink.breakpoint.easypay], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:51,440 INFO
            [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[easypay][${env:server.port}] 2021-10-09 17:28:51,440 INFO
            [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[easypay][${env:server.port}] 2021-10-09 17:28:51,543 INFO
            [main][GenericScope.java:294] - BeanFactory id=dca8f719-6fc1-32de-974a-80038c5a5de4
[easypay][${env:server.port}] 2021-10-09 17:28:51,823 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$6360027a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,843 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,861 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,875 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,881 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,882 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,883 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$d59f9ef4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,891 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$6849a74c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,898 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,903 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,910 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$288ee106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,918 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$1c59e9cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,934 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$a74c7cfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,943 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:51,945 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,148 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,155 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,176 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,180 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f4bd79d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,363 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,368 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,373 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,377 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,477 WARN
            [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:server.port}] 2021-10-09 17:28:52,478 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,495 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,515 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,522 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$2ce045aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,532 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,539 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$66b641aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,546 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$3b323307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,557 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ed7ef520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,566 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a895db0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,573 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,578 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,589 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$cf61523d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,605 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,612 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$1d3dd096] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,624 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,630 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,661 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,672 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,680 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$f9d27f0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,690 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,693 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,702 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,711 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,711 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,729 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,737 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,741 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,744 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:52,757 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbb8b673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[easypay][${env:server.port}] 2021-10-09 17:28:53,158 INFO
            [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 57010 (http)
[easypay][${env:server.port}] 2021-10-09 17:28:53,176 INFO
            [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-57010"]
[easypay][${env:server.port}] 2021-10-09 17:28:53,187 INFO
            [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[easypay][${env:server.port}] 2021-10-09 17:28:53,188 INFO
            [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[easypay][${env:server.port}] 2021-10-09 17:28:53,196 INFO
            [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\dev\Java\jdk1.8.0_301\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\dev\Java\jdk1.8.0_301\bin;D:\DEV\Git\cmd;D:\dev\mysql57\mysql-5.7.34-winx64\bin;C:\Users\shaoshuai\AppData\Local\Microsoft\WindowsApps;;D:\dev\JetBrains\IntelliJ IDEA 2021.2.2\bin;;.]
[easypay][${env:server.port}] 2021-10-09 17:28:53,380 INFO
            [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[easypay][${env:server.port}] 2021-10-09 17:28:53,380 INFO
            [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 3342 ms
[easypay][${env:server.port}] 2021-10-09 17:28:55,011 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,090 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,106 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,151 INFO
            [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[easypay][${env:server.port}] 2021-10-09 17:28:55,171 INFO
            [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[easypay][${env:server.port}] 2021-10-09 17:28:55,178 INFO
            [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[easypay][${env:server.port}] 2021-10-09 17:28:55,195 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,224 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,224 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,241 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,250 INFO
            [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,250 WARN
            [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,252 DEBUG
            [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 172.16.42.130
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at ink.breakpoint.easypay.merchant.MerchantApplication.main(MerchantApplication.java:12)
[easypay][${env:server.port}] 2021-10-09 17:28:55,257 WARN
            [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,281 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,290 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,290 DEBUG
            [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196] should not be registered.
[easypay][${env:server.port}] 2021-10-09 17:28:55,298 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,300 INFO
            [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService] is being subscribed for service[name : merchant-service]
[easypay][${env:server.port}] 2021-10-09 17:28:55,301 INFO
            [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : ink.breakpoint.easypay.merchant.service.api.AppService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[easypay][${env:server.port}] 2021-10-09 17:28:55,301 INFO
            [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-service] is about to be initialized
[easypay][${env:server.port}] 2021-10-09 17:28:55,384 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,387 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,388 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,389 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,390 DEBUG
            [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0] should not be registered.
[easypay][${env:server.port}] 2021-10-09 17:28:55,390 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,415 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,436 DEBUG
            [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[easypay][${env:server.port}] 2021-10-09 17:28:55,442 DEBUG
            [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 16
[easypay][${env:server.port}] 2021-10-09 17:28:55,474 DEBUG
            [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[easypay][${env:server.port}] 2021-10-09 17:28:55,475 DEBUG
            [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[easypay][${env:server.port}] 2021-10-09 17:28:55,479 DEBUG
            [main][PlatformDependent.java:955] - Platform: Windows
[easypay][${env:server.port}] 2021-10-09 17:28:55,482 DEBUG
            [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[easypay][${env:server.port}] 2021-10-09 17:28:55,483 DEBUG
            [main][PlatformDependent0.java:871] - Java version: 8
[easypay][${env:server.port}] 2021-10-09 17:28:55,484 DEBUG
            [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[easypay][${env:server.port}] 2021-10-09 17:28:55,485 DEBUG
            [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[easypay][${env:server.port}] 2021-10-09 17:28:55,486 DEBUG
            [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[easypay][${env:server.port}] 2021-10-09 17:28:55,487 DEBUG
            [main][PlatformDependent0.java:243] - direct buffer constructor: available
[easypay][${env:server.port}] 2021-10-09 17:28:55,488 DEBUG
            [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[easypay][${env:server.port}] 2021-10-09 17:28:55,489 DEBUG
            [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[easypay][${env:server.port}] 2021-10-09 17:28:55,489 DEBUG
            [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[easypay][${env:server.port}] 2021-10-09 17:28:55,489 DEBUG
            [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[easypay][${env:server.port}] 2021-10-09 17:28:55,490 DEBUG
            [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\SHAOSH~1\AppData\Local\Temp (java.io.tmpdir)
[easypay][${env:server.port}] 2021-10-09 17:28:55,490 DEBUG
            [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[easypay][${env:server.port}] 2021-10-09 17:28:55,492 DEBUG
            [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 3791650816 bytes
[easypay][${env:server.port}] 2021-10-09 17:28:55,492 DEBUG
            [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[easypay][${env:server.port}] 2021-10-09 17:28:55,494 DEBUG
            [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[easypay][${env:server.port}] 2021-10-09 17:28:55,495 DEBUG
            [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[easypay][${env:server.port}] 2021-10-09 17:28:55,496 DEBUG
            [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[easypay][${env:server.port}] 2021-10-09 17:28:55,526 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,543 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,585 DEBUG
            [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[easypay][${env:server.port}] 2021-10-09 17:28:55,585 DEBUG
            [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 16
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 16
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[easypay][${env:server.port}] 2021-10-09 17:28:55,592 DEBUG
            [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[easypay][${env:server.port}] 2021-10-09 17:28:55,593 DEBUG
            [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[easypay][${env:server.port}] 2021-10-09 17:28:55,593 DEBUG
            [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[easypay][${env:server.port}] 2021-10-09 17:28:55,593 DEBUG
            [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[easypay][${env:server.port}] 2021-10-09 17:28:55,598 DEBUG
            [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[easypay][${env:server.port}] 2021-10-09 17:28:55,599 DEBUG
            [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[easypay][${env:server.port}] 2021-10-09 17:28:55,626 DEBUG
            [main][DefaultChannelId.java:79] - -Dio.netty.processId: 8784 (auto-detected)
[easypay][${env:server.port}] 2021-10-09 17:28:55,630 DEBUG
            [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[easypay][${env:server.port}] 2021-10-09 17:28:55,630 DEBUG
            [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[easypay][${env:server.port}] 2021-10-09 17:28:55,747 DEBUG
            [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[easypay][${env:server.port}] 2021-10-09 17:28:55,748 DEBUG
            [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[easypay][${env:server.port}] 2021-10-09 17:28:55,868 DEBUG
            [main][DefaultChannelId.java:101] - -Dio.netty.machineId: dc:8b:28:ff:fe:4b:12:ca (auto-detected)
[easypay][${env:server.port}] 2021-10-09 17:28:55,890 DEBUG
            [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[easypay][${env:server.port}] 2021-10-09 17:28:55,891 DEBUG
            [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[easypay][${env:server.port}] 2021-10-09 17:28:55,891 DEBUG
            [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[easypay][${env:server.port}] 2021-10-09 17:28:55,924 INFO
            [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /172.16.42.130:20890 from NettyClient 172.16.42.130 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xfb8eccb9, L:/172.16.42.130:62057 - R:/172.16.42.130:20890]], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,924 INFO
            [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-1MC8497/172.16.42.130 connect to the server /172.16.42.130:20890, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,957 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,975 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:55,990 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,023 INFO
            [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\shaoshuai\.dubbo\dubbo-registry-merchant-application-localhost:8848.cache, data: {ink.breakpoint.easypay.merchant.service.api.IMerchantService=dubbo://172.16.42.118:20890/ink.breakpoint.easypay.merchant.service.api.IMerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.IMerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.IMerchantService&methods=queryMerchantById&path=ink.breakpoint.easypay.merchant.service.api.IMerchantService&pid=4108&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1632907122474, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://172.16.42.118:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=13352&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1632906932832&version=1.0.0}, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,023 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,034 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,047 INFO
            [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, urls: [dubbo://172.16.42.130:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11664&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1633771710996&version=1.0.0], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,051 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://172.16.42.130/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, urls: [dubbo://172.16.42.130:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11664&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1633771710996&version=1.0.0], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,054 INFO
            [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://localhost:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=8784&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D8784%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D172.16.42.130%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1633771735385%26version%3D1.0.0&register.ip=172.16.42.130&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735385&version=1.0.0, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,089 DEBUG
            [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[easypay][${env:server.port}] 2021-10-09 17:28:56,090 DEBUG
            [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[easypay][${env:server.port}] 2021-10-09 17:28:56,090 DEBUG
            [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[easypay][${env:server.port}] 2021-10-09 17:28:56,090 DEBUG
            [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[easypay][${env:server.port}] 2021-10-09 17:28:56,104 DEBUG
            [NettyClientWorker-1-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[easypay][${env:server.port}] 2021-10-09 17:28:56,104 DEBUG
            [NettyClientWorker-1-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[easypay][${env:server.port}] 2021-10-09 17:28:56,107 DEBUG
            [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@657c6532
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,149 DEBUG
            [NettyServerWorker-3-1][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,149 DEBUG
            [NettyServerWorker-3-1][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,149 DEBUG
            [NettyServerWorker-3-1][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,150 DEBUG
            [NettyServerWorker-3-1][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,157 DEBUG
            [NettyServerWorker-3-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,157 DEBUG
            [NettyServerWorker-3-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,159 DEBUG
            [NettyServerWorker-3-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1992737a
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,203 DEBUG
            [DubboServerHandler-172.16.42.130:20890-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,231 DEBUG
            [DubboClientHandler-172.16.42.130:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,232 WARN
            [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,235 DEBUG
            [DubboServerHandler-172.16.42.130:20890-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,237 DEBUG
            [DubboClientHandler-172.16.42.130:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,238 DEBUG
            [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196] will notify all URLs : [dubbo://172.16.42.130:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.AppService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.AppService&methods=queryAppByMerchant,createApp,getAppById&pid=11664&register=true&release=2.7.3&side=provider&timestamp=1633771709572]
[easypay][${env:server.port}] 2021-10-09 17:28:56,239 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,243 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,255 INFO
            [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, urls: [dubbo://172.16.42.130:20890/ink.breakpoint.easypay.merchant.service.api.AppService?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.AppService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.AppService&methods=queryAppByMerchant,createApp,getAppById&path=ink.breakpoint.easypay.merchant.service.api.AppService&pid=11664&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1633771709572], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,256 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.AppService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, urls: [dubbo://172.16.42.130:20890/ink.breakpoint.easypay.merchant.service.api.AppService?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.AppService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.AppService&methods=queryAppByMerchant,createApp,getAppById&path=ink.breakpoint.easypay.merchant.service.api.AppService&pid=11664&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1633771709572], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,256 INFO
            [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service ink.breakpoint.easypay.merchant.service.api.AppService from url registry://localhost:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.AppService&lazy=false&methods=queryAppByMerchant,createApp,getAppById&pid=8784&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dink.breakpoint.easypay.merchant.service.api.AppService%26lazy%3Dfalse%26methods%3DqueryAppByMerchant%2CcreateApp%2CgetAppById%26pid%3D8784%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D172.16.42.130%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1633771735196&register.ip=172.16.42.130&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771735196, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,297 INFO
            [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[easypay][${env:server.port}] 2021-10-09 17:28:56,305 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,316 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,316 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,323 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,323 DEBUG
            [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306] should not be registered.
[easypay][${env:server.port}] 2021-10-09 17:28:56,323 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,323 INFO
            [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService] is being subscribed for service[name : merchant-service]
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,325 DEBUG
            [DubboServerHandler-172.16.42.130:20890-thread-4][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,326 DEBUG
            [DubboClientHandler-172.16.42.130:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,327 DEBUG
            [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306] will notify all URLs : [dubbo://172.16.42.130:20890?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.MerchantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&methods=queryMerchantById,applyMerchant,createMerchant&pid=11664&register=true&release=2.7.3&side=provider&timestamp=1633771710552]
[easypay][${env:server.port}] 2021-10-09 17:28:56,328 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,332 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,343 INFO
            [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, urls: [dubbo://172.16.42.130:20890/ink.breakpoint.easypay.merchant.service.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&methods=queryMerchantById,applyMerchant,createMerchant&path=ink.breakpoint.easypay.merchant.service.api.MerchantService&pid=11664&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1633771710552], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,344 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://172.16.42.130/ink.breakpoint.easypay.merchant.service.api.MerchantService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, urls: [dubbo://172.16.42.130:20890/ink.breakpoint.easypay.merchant.service.api.MerchantService?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.MerchantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&methods=queryMerchantById,applyMerchant,createMerchant&path=ink.breakpoint.easypay.merchant.service.api.MerchantService&pid=11664&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1633771710552], dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,344 INFO
            [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service ink.breakpoint.easypay.merchant.service.api.MerchantService from url registry://localhost:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=ink.breakpoint.easypay.merchant.service.api.MerchantService&lazy=false&methods=queryMerchantById,applyMerchant,createMerchant&pid=8784&qos.enable=false&qos.port=22310&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dink.breakpoint.easypay.merchant.service.api.MerchantService%26lazy%3Dfalse%26methods%3DqueryMerchantById%2CapplyMerchant%2CcreateMerchant%26pid%3D8784%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D172.16.42.130%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1633771736306&register.ip=172.16.42.130&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1633771736306, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:server.port}] 2021-10-09 17:28:56,354 WARN
            [main][AbstractApplicationContext.java:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'merchantController': Unsatisfied dependency expressed through field 'smsService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'smsServiceImpl': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'sms.url' in value "${sms.url}"
[easypay][${env:server.port}] 2021-10-09 17:28:56,360 INFO
            [main][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[easypay][${env:server.port}] 2021-10-09 17:28:56,360 INFO
            [main][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" group="merchant-service" version="1.0.0" generic="true" lazy="false" sticky="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[easypay][${env:server.port}] 2021-10-09 17:28:56,361 INFO
            [main][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy1@6003220a was destroying!
[easypay][${env:server.port}] 2021-10-09 17:28:56,361 INFO
            [main][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy2@16b64a03 was destroying!
[easypay][${env:server.port}] 2021-10-09 17:28:56,361 INFO
            [main][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[easypay][${env:server.port}] 2021-10-09 17:28:56,362 INFO
            [main][DirectJDKLog.java:173] - Stopping service [Tomcat]
[easypay][${env:server.port}] 2021-10-09 17:28:56,380 INFO
            [main][ConditionEvaluationReportLoggingListener.java:142] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[easypay][${env:server.port}] 2021-10-09 17:28:56,381 INFO
            [main][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,916 WARN
            [NettyServerWorker-3-1][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /172.16.42.130:20890. You can graceful shutdown now., dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:56,918 DEBUG
            [DubboServerHandler-172.16.42.130:20890-thread-6][DubboProtocol.java:174] -  [DUBBO] disconnected from /172.16.42.130:62057,url:dubbo://172.16.42.130:20890/ink.breakpoint.easypay.merchant.service.api.AppService?anyhost=true&application=merchant-service&bean.name=ServiceBean:ink.breakpoint.easypay.merchant.service.api.AppService&bind.ip=172.16.42.130&bind.port=20890&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=ink.breakpoint.easypay.merchant.service.api.AppService&methods=queryAppByMerchant,createApp,getAppById&pid=11664&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1633771709572, dubbo version: 2.7.3, current host: 172.16.42.130
[easypay][${env:SERVER_PORT}] 2021-10-09 17:28:59,566 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:29:29,581 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:29:59,592 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:30:29,603 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:30:59,617 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:31:29,638 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:31:59,686 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:32:29,699 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:32:59,726 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:33:29,747 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:33:59,774 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:34:29,792 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:34:59,816 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:35:29,835 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:35:59,854 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:36:29,875 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:36:59,894 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:37:29,910 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:37:59,923 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:38:29,942 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:38:59,965 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:39:29,985 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:40:00,010 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:40:30,025 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:41:00,046 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:41:30,064 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:42:00,091 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:42:30,112 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:43:00,134 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:43:30,162 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:44:00,186 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:44:30,209 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:45:00,231 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:45:30,242 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:46:00,267 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:46:30,282 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:47:00,295 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:47:30,314 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:48:00,322 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:48:30,332 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:49:00,340 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:49:30,358 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:50:00,376 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:50:30,393 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:51:00,415 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:51:30,431 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:52:00,442 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:52:30,457 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:53:00,479 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:53:30,497 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:54:00,519 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:54:30,542 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:55:00,564 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:55:30,589 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:56:00,606 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:56:30,621 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:57:00,639 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:57:30,660 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:58:00,673 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:58:30,692 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:59:00,713 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[easypay][${env:SERVER_PORT}] 2021-10-09 17:59:30,728 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
